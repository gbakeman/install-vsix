name: 'Install a Visual Studio Extension' 
description: 'Download the latest extension version and install in Visual Studio'
inputs:
  packageName: 
    description:  'Package names from the Visual Studio Marketplace URL itemName parameter'
    required: true
  monitorProcess:
    description:  'Regularly print out basic information of the extension Process object (CPU, etc.)'
    default: false
  verboseLogOutput:
    description:  'Print out to console much more logged information than normal.'
    default: false
outputs:
  logsPathMatch:
    description: 'Path on the runner, with wildcards, to match all associated log files.'
    value: ${{ steps.gen-log-path.outputs.path }}
runs:
  using: "composite"
  steps:
    - id: vsix
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted # Prepare environment for installing a package
        .\install-vsix.ps1 -Debug `
          ${{ (inputs.monitorProcess == true) && '-MonitorProcessInfo' || '' }} `
          ${{ (inputs.verboseLogOutput == true) && '-OutputDetailedInfo' || '' }} `
          -PackageName ${{ inputs.packageName }}
    - id: gen-log-path
      if: always()
      shell: pwsh
      run: |
        [System.Environment]::SetEnvironmentVariable('GITHUB_OUTPUT','path=$($env:TEMP)\dd_*.log')
        Write-Host "Updated output to $($env:GITHUB_OUTPUT)"
    - if: always()
      name: Test gen log path
      shell: pwsh
      env:
        PATH: '${{ steps.gen-log-path.outputs.path }}'
      run: echo $env:PATH